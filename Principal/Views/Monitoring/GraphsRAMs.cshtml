@*
    This is the example main content of the AdminLTE demo and represents a good smattering of AdminLTE functionality in a cshtml
    TODO: Delete this file when you're ready to start building your app
*@

@{

}


<div class="box-body">

    <div id="header">
        <h2>Real-time updates</h2>
    </div>

    <div id="content">

        <div class="demo-container">
            <div id="placeholder2" class="demo-placeholder2"></div>
        </div>

        <p>You can update a chart periodically to get a real-time effect by using a timer to insert the new data in the plot and redraw it.</p>

        <p>Time between updates: <input id="updateInterval" type="text" value="" style="text-align: right; width:5em"> milliseconds</p>

    </div>

    <div id="footer">
        Copyright &copy; 2007 - 2014 IOLA and Ole Laursen
    </div>

</div><!-- /.box-body -->


@section scripts {

    <script src="~/Scripts/AdminLTE/pages/dashboard2.js"></script>
    <script src="~/Scripts/AdminLTE/demo.js"></script>
<script language="javascript" type="text/javascript" src="~/Scripts/jquery.js"></script>
<script language="javascript" type="text/javascript" src="~/Scripts/jquery_float.js"></script>
<script type="text/javascript">

	$(function() {

		// We use an inline data source in the example, usually data would
		// be fetched from a server

		var data = [],
			totalPoints = 300;

		function getRandomData() {

			if (data.length > 0)
				data = data.slice(1);

			// Do a random walk
        var cpuValues=[];
       // a=[1,2,3,4,5,45,44,33,22,12]
        $.ajax({
                url: 'http://localhost:14607//Monitoring/GetRAMsJSON',
                dataType: 'json',
                type: 'GET',
                contentType: 'pplication/x-www-form-urlencoded; charset=utf-8',
                data: {},
                async: false,
                processData: true,
                cache: false,
                success: function (resp) {
                    ramValues = resp;
                },
                error: function (xhr) {
                    alert("error");
                }
            })

           for (i = 0; i < ramValues.length; i++) {
                var y= ramValues[i];
                data.push(y);
        }

			// Zip the generated y values with the x values

			var res = [];
			for (var i = 0; i < data.length; ++i) {
				res.push([i, data[i]])
			}


			return res;
		}

		// Set up the control widget

		var updateInterval = 300;
		$("#updateInterval").val(updateInterval).change(function () {
			var v = $(this).val();
			if (v && !isNaN(+v)) {
				updateInterval = +v;
				if (updateInterval < 1) {
					updateInterval = 1;
				} else if (updateInterval > 2000) {
					updateInterval = 2000;
				}
				$(this).val("" + updateInterval);
			}
		});

		var plot = $.plot("#placeholder2", [ getRandomData() ], {
			series: {
				shadowSize: 0	// Drawing is faster without shadows
			},
			yaxis: {
				min: 0,
				max: 100
			},
			xaxis: {
				show: false
			}
		});

		function update() {

			plot.setData([getRandomData()]);

			// Since the axes don't change, we don't need to call plot.setupGrid()

			plot.draw();
			setTimeout(update, updateInterval);
		}

		update();

		// Add the Flot version string to the footer

		$("#footer").prepend("Flot " + $.plot.version + " &ndash; ");
	});

</script>
    }